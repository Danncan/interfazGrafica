@model PagedList.IPagedList<interfazGrafica.Models.Clientes>
@using PagedList.Mvc; // Necesario para los helpers de PagedList

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Apellido)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Telefono)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FechaRegistro)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Cedula)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Activo)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
            <td>@Html.DisplayFor(modelItem => item.Apellido)</td>
            <td>@Html.DisplayFor(modelItem => item.Email)</td>
            <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
            <td>@Html.DisplayFor(modelItem => item.FechaRegistro)</td>
            <td>@Html.DisplayFor(modelItem => item.Cedula)</td>
            <td>@Html.DisplayFor(modelItem => item.Activo)</td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ClienteID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ClienteID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ClienteID })
            </td>
        </tr>
    }

</table>

<!-- Controles de paginación -->
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayLinkToIndividualPages = true,
        DisplayPageCountAndCurrentLocation = false,
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        EllipsesFormat = "&#8230;",
        LinkToFirstPageFormat = "Primera",
        LinkToPreviousPageFormat = "Anterior",
        LinkToNextPageFormat = "Siguiente",
        LinkToLastPageFormat = "Última",
        PageCountAndCurrentLocationFormat = "Página {0} de {1}.",
        ItemSliceAndTotalFormat = "Mostrando {0} a {1} de {2} entradas.",
        FunctionToDisplayEachPageNumber = null,
        ClassToApplyToFirstListItemInPager = null,
        ClassToApplyToLastListItemInPager = null,
        ContainerDivClasses = new[] { "pagination-container" },
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
    })
